<import name="title" src="./title.ux"></import>
<template>
  <!-- template里只能有一个根节点 -->
  <div class="demo-page">
    <title title="{{titles.title}}"></title>
    <text class="title">欢迎打开{{cTitle}}</text>
    <text class="title">欢迎打开{{aTitle}}</text>
    <!-- 点击跳转详情页 -->
    <input class="btn" type="button" value="跳转到详情页" onclick="routeDetail" />
    <input class="btn" type="button" value="set title" onclick="setVal" />
    <input class="btn" type="button" value="set a" onclick="setVal2" />
    <text value="{{'a = ' + a}}"></text>
    <text value="{{'b = ' + b}}"></text>
    <text value="{{'c = ' + c}}"></text>
  </div>
</template>

<script>
import router from '@system.router'
import Vuex from 'quickapp-vuex'
export default Vuex.Component({
  // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖
  private: {
    titles: {
      title: 'demo页'
    }
  },
  computed: {
    test () {
      return {
        title: this.titles.title
      }
    },
    cTitle: {
      get: function () {
        return this.titles.title + '456'
      },
      set: function (val) {
        const _val = val.split('-')[0]
        this.titles.title = _val
      }
    },
    ...Vuex.mapGetters(['a', 'b', 'c']),
    ...Vuex.mapState({
      aTitle: function (state) {
        return this.titles.title + state.a
      }
    })
  },
  watch: {
    'test.title': function(newVal, oldVal) {
      console.log('test.title change', newVal, oldVal)
    }
  },
  setVal () {
    this.cTitle = 'newTitle-fw'
  },
  setVal2 () {
    this.setAction()
  },
  routeDetail () {
    // 跳转到应用内的某个页面，router用法详见：文档->接口->页面路由
    router.push ({
      uri: '/Counter'
    })
  },
  ...Vuex.mapMutations(['setA']),
  ...Vuex.mapActions(['setAction'])
})
</script>

<style>
  .demo-page {
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .title {
    font-size: 40px;
    text-align: center;
  }

  .btn {
    width: 550px;
    height: 86px;
    margin-top: 75px;
    border-radius: 43px;
    background-color: #09ba07;
    font-size: 30px;
    color: #ffffff;
  }
</style>
